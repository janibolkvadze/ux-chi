---
title: Installation
order: 1
description: Chi provides developers with a collection of HTML and CSS patterns to build fast, reusable, and consistent responsive interfaces.
---

h2 Adding Chi
p.-text
  | Adding Chi to your project is as simple as loading the Chi stylesheet from the <a href="https://assets.ctl.io">CenturyLink Assets Server</a>.
  | Not only is this a great way to get started with Chi, it is also a highly available and performant option for loading the required
  | assets into your project.

.-mb--2
  :code(lang='html')
    <link rel="stylesheet" href="https://assets.ctl.io/chi/1.4.0/chi.css">

p.-text
  | Next, add the <code>chi</code> CSS class to the <code>&lt;html&gt;</code> tag of your document to properly scope the styles.
  | This allows Chi to override any existing styles that have been defined by legacy markup.

  .-mb--2
  :code(lang='html')
    <html class="chi">
      ...
    </html>

p.-text.-mb--3
  | At this point you will be able to target the styles available in Chi by referencing documentation.

h2 Development Workflow
p.-text
  | Set up your Chi development environment with Docker. First make sure you have Docker installed, then run
  | the command:

.-mb--2
  :code(lang='bash')
    scripts/docker.sh alias
    source ~/.bash_profile

p.-text Now your environment is set up. To start development run:

.-mb--2
  :code(lang='bash')
    chi start

p.-text
  | Once the container has been bootstrapped and the Chi project has started, connect to <a href="http://localhost:8000">http://localhost:8000</a>
  | in your browser to load Chi. While running, any changes to the Chi source will automatically be reloaded in your browser.

p.-text.-mb--3 The project has been configured to run inside a Docker container so it won't work as a regular node application.

h3 Testing Changes
p.-text
  | We use <a target="_blank" href="https://garris.github.io/BackstopJS" rel="noopener">BackstopJS</a> for visual regression testing of our CSS components.
  | In order to account for differences in development environments we always run these tests in a consistent Docker container.
  | To execute the test suite, run the following command:

.-mb--2
  :code(lang='bash')
    chi test

p.-text
  | A report containing the results of the test will be created under <code>reports/html_report</code>. If there were failures,
  | you will need to visually examine the changes and act appropriately based on the anticipated results.

p.-text
  | If you receive a test failure and you've made changes that you know are correct, you will need to override the test
  | references with your new changes by running the <code>approve</code> command on BackstopJS:

.-mb--2
  :code(lang='bash')
    chi approve

p.-text.-mb--3 Once you have approved the changes, commit the new reference files with your changes.

h2 Production
p.-text Use the build command to make a ready-to-production build:
.-mb--4
  :code(lang='bash')
    chi build
